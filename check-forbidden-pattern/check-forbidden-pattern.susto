- check-forbidden-pattern.susto ------------------------------------------------

ALL filesInProject DO NOT match pattern

[gather] filesInProject : [LocalFile]
filesInProject = recursiveListDirectory pathToProject

[gather] match : regex -> (LocalFile -> Bool)
match = <help!>

[check] pattern : regex
pattern = "BEGIN RSA PRIVATE KEY"

[runtime] pathToProject : FilePath






- filematchregex.py ------------------------------------------------------------

def fileMatchRegex(r: RegEx, f: LocalFile) -> Bool
    # Shameless call to grep using `r` and `f` and return retval as bool


- regex.type -------------------------------------------------------------------

RegEx:
{ "type": "string" }






-- COMPILER OUTPUT -------------------------------------------------------------

TYPECHECKS => NO
COMPILABLE => NO

MISSING ROLES:
MISSING TYPES: regex
MISSING VALUES: match

Help!
-----

By the position of the token <help!> I can infer the type `regex -> (LocalFile -> Bool)`.
Possible programs to fill the gap are:

- isExecutable : Permission -> (LocalFile -> Bool)   | regex=Permission
- isOwnedBy    : User -> (LocalFile -> Bool)         | regex=User

